        <AppBar position="sticky" color="default" elevation={0}>
          <Toolbar>
            <Grid
              justify="space-between"
              alignItems="center"
              alignContent="center"
              container
            >
              <Grid item style={{ marginTop: "8px" }}>
                <Link
                  component={({
                    className,
                    children
                  }: {
                    children: any;
                    className: string;
                  }) => (
                    <RouterLink className={className} to={"/"}>
                      {children}
                    </RouterLink>
                  )}
                >
                  <Grid container>
                    <Grid>
                      <img
                        alt="expedition-logo"
                        height="30"
                        style={{ marginRight: "10px" }}
                        src={expeditionLogo}
                      />
                    </Grid>
                    <Grid>
                      <Typography color="textSecondary" variant="h6">
                        {t("Block Explorer")}
                      </Typography>
                    </Grid>
                  </Grid>
                </Link>
              </Grid>
              <Grid item md={6} xs={12}>
                <InputBase
                  placeholder={t(
                    "Enter an Address, Transaction Hash or Block Number"
                  )}
                  onKeyDown={(event: KeyboardEvent<HTMLInputElement>) => {
                    if (event.keyCode === 13) {
                      handleSearch(search);
                    }
                  }}
                  onChange={(event: ChangeEvent<HTMLInputElement>) => {
                    if (event.target.value) {
                      const { value } = event.target;
                      setSearch(value as any);
                    }
                  }}
                  fullWidth
                  style={{
                    background: "rgba(0,0,0,0.1)",
                    borderRadius: "4px",
                    padding: "5px 10px 0px 10px",
                    marginRight: "5px"
                  }}
                />
              </Grid>
              <Grid item>
                <NetworkDropdown
                  networks={networks}
                  setSelectedNetwork={setSelectedNetwork}
                  selectedNetwork={selectedNetwork}
                />
                <LanguageMenu />
                <Tooltip title={t("JSON-RPC API Documentation") as string}>
                  <IconButton
                    onClick={
                      () =>
                        window.open(
                          "https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/etclabscore/ethereum-json-rpc-specification/master/openrpc.json"
                        ) //tslint:disable-line
                    }
                  >
                    <NotesIcon />
                  </IconButton>
                </Tooltip>
                <Tooltip title={t("Expedition Github") as string}>
                  <IconButton
                    onClick={() =>
                      window.open("https://github.com/etclabscore/expedition")
                    }
                  >
                    <CodeIcon />
                  </IconButton>
                </Tooltip>
                <ConfigurationMenu onChange={handleConfigurationChange} />
                <Tooltip title={t("Toggle Dark Mode") as string}>
                  <IconButton onClick={darkMode.toggle}>
                    {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}
                  </IconButton>
                </Tooltip>
              </Grid>
            </Grid>
          </Toolbar>
        </AppBar>